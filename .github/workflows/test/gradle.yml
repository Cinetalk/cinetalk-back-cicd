# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
    # gradle caching - 빌드 시간 향상
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: make application.yml
      if: contains(github.ref, 'main')
      run: |
        mkdir ./src/main/resources
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.YML }}" > ./application.yml
      shell: bash

    - name: make application-prod.yml
      if: contains(github.ref, 'main')
      run: |
        cd ./src/main/resources
        touch ./application-prod.yml
        echo "${{ secrets.YML_PROD }}" > ./application-prod.yml
      shell: bash

    - name: Upload Application
      uses: actions/upload-artifact@v3
      with:
        name: build file
        path: build/libs/app.jar

    - name: Execute Gradle build
      run: |
        chmod +x gradlew
        ./gradlew build -x test

    # docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        sudo chmod +x /usr/local/bin/docker-compose
        sudo chmod 666 /var/run/docker.sock
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push ${{ secrets.DOCKER_USERNAME }}/docker-prod

  # deploy to production
    - name: Deploy to prod
      uses: kallis0926/ssh-action@main
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.CINETALK_BACK_BASE_URL }} # EC2 퍼블릭 IPv4 DNS
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-prod
          docker-compose up -d
        

    - name: Set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env:
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        cinetalk.back.base.url: ${{ secrets.CINETALK_BACK_BASE_URL }}
        spring.profiles_active: ${{ secrets.SPRING_PROFILES_ACTIVE }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0




    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
